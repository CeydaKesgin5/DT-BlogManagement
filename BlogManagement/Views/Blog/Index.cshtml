@using Entities.Models;
@model IEnumerable<Blog>
<style>
    tr {
        height: 90px; /* Tüm satırlar için yükseklik  */
    }

   
</style>

<div class="row">
    <div class="col-md-3">
        @await Component.InvokeAsync("CategoriesMenu")
        <br /><br /><br />

       <form method="get" action="@Url.Action("Index","Blog")">
            <div class="form-group">
                <select class="form-select text-primary" aria-label="Default select example" id="sortOrder" name="sortOrder" onchange="this.form.submit()">
                    <option selected>Sort Blogs By</option>
                    <option value="">Oldest First</option>
                    <option value="date">Newest First</option>
                </select>

           
            </div>
       </form>
    
    </div>

    
    <div class="col-md-9">
        <div class="display-6">Blogs</div>

                <div class="d-flex justify-content-end my-3">
                    @if (User.Identity.IsAuthenticated) // Kullanıcı giriş yaptı mı?
                    {

                        <a class="btn btn-outline-success" asp-action="Create">
                            <i class="fa fa-plus"></i>
                            Create
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-outline-info" asp-controller="Account" asp-action="Login">
                            <i class="fa fa-sign-in"></i>
                            Login to Create
                        </a>
                    }
                </div>

            @if (ViewBag.CategoryId != null)
            {
                @await Component.InvokeAsync("CategoryBlogList", new { categoryId = ViewBag.CategoryId })
            }
            else
            {
                @if (ViewBag.SortOrder == "date")//sort blogs by date
                {
                    <div id="blogsContainer">
                        @await Component.InvokeAsync("GetLatestBlogs", new { sortOrder = ViewBag.SortOrder })
                    </div>
                }
                else
                {
                    <div id="blogsContainer">
                        @await Component.InvokeAsync("AllBlogList")
                    </div>
                }
            }
   </div>
</div>
<footer>
    <partial name="_Footer" />
</footer>